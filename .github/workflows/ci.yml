name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json

      # Root-Install, falls du im Root Skripte hast (optional, bleibt folgenlos wenn kein package.json da ist)
      - name: Install deps (root)
        if: ${{ hashFiles('package.json') != '' }}
        run: |
          (npm ci --no-audit --prefer-offline || npm install --no-audit)

      # Backend-Install (dein eigentlicher Code)
      - name: Install deps (backend)
        if: ${{ hashFiles('backend/package.json') != '' }}
        working-directory: backend
        run: |
          (npm ci --no-audit --prefer-offline || npm install --no-audit)

      - name: Generate Prisma Client (backend)
        if: ${{ hashFiles('backend/package.json') != '' }}
        working-directory: backend
        run: npx prisma generate

      - name: Typecheck backend
        if: ${{ hashFiles('backend/package.json') != '' }}
        working-directory: backend
        run: npm run typecheck --if-present

      - name: Build backend
        if: ${{ hashFiles('backend/package.json') != '' }}
        working-directory: backend
        run: npm run build --if-present

      - name: Test backend (with coverage)
        if: ${{ hashFiles('backend/package.json') != '' }}
        working-directory: backend
        run: npm run test:coverage --if-present

      - name: Upload coverage artifact
        if: ${{ hashFiles('backend/coverage/lcov.info') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: backend/coverage

  openapi-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Validate OpenAPI (swagger-cli)
        run: npx --yes swagger-cli@latest validate docs/openapi.yaml

      - name: Lint OpenAPI (Redocly via npx)
        # Lint l√§uft, aber Warnungen sollen den Job NICHT fehlschlagen lassen
        run: npx --yes @redocly/cli@latest lint docs/openapi.yaml --format=github || true
