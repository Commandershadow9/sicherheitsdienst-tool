name: Notify Discord

on:
  workflow_dispatch: {}              # manueller Test-Trigger (Run workflow)
  push:
    branches:
      - main                         # passe bei Bedarf an (oder nutze '**' f√ºr alle)
    tags:
      - 'v*'                         # Releases per Tag
  pull_request:
    types: [opened, synchronize, reopened, closed, ready_for_review, converted_to_draft]
  workflow_run:                      # CI-Ergebnisse melden
    workflows: [ "ci", "CI", "build", "test" ]   # muss den Workflow-Namen(en) entsprechen
    types: [completed]
  release:
    types: [published]

permissions:
  contents: read

jobs:
  notify:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      # Checkout nur wenn wir Dateien brauchen (push/release/dispatch)
      - name: Checkout
        if: ${{ github.event_name == 'push' || github.event_name == 'release' || github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure jq, curl, python3 present
        run: sudo apt-get update && sudo apt-get install -y jq curl python3

      - name: Build Discord payload
        id: build
        shell: bash
        env:
          GH_EVENT_JSON: ${{ toJson(github.event) }}
        run: |
          set -euo pipefail

          esc_json () { python3 - << 'PY'
import sys, json
print(json.dumps(sys.stdin.read())[1:-1])
PY
          }

          actor="${{ github.actor }}"
          repo="${{ github.repository }}"
          repo_url="https://github.com/${repo}"
          run_url="https://github.com/${repo}/actions/runs/${{ github.run_id }}"
          avatar="https://github.com/${actor}.png"
          ts="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          event="${{ github.event_name }}"

          TITLE=""
          DESC=""
          COLOR=5793266
          ICON="https://raw.githubusercontent.com/primer/octicons/main/icons/info-24.svg"
          FIELDS="[]"

          if [ "$event" = "workflow_dispatch" ]; then
            TITLE="üîî Testbenachrichtigung"
            DESC="Manuell ausgel√∂st von **${actor}**\n${run_url}"
            COLOR=4437377
            ICON="https://raw.githubusercontent.com/primer/octicons/main/icons/bell-24.svg"
            FIELDS=$(cat <<JSON
[
  { "name": "Repository", "value": "$(printf "%s" "$repo_url" | esc_json)" }
]
JSON
)
          elif [ "$event" = "push" ]; then
            ref="${GITHUB_REF_NAME:-unknown}"
            sha="${GITHUB_SHA:-}"
            short_sha="${sha:0:7}"
            before="$(echo "$GH_EVENT_JSON" | jq -r '.before // ""')"
            compare_url="${repo_url}/compare/${before}...${sha}"

            COMMITS_RAW="$(echo "$GH_EVENT_JSON" | jq -r '
              (.commits // [])[0:10][]?
              | "- **" + (.id[0:7]) + "**: " + ((.message // "") | gsub("\n"; " ")) + "  ‚Äî _" + ((.author.username // .author.name) // "unknown") + "_"
            ')"
            [ -z "$COMMITS_RAW" ] && COMMITS_RAW="- (keine Commits √ºbermittelt)"
            COMMITS_ESC="$(printf "%s" "$COMMITS_RAW" | esc_json)"

            TITLE="üì¶ Push auf ${repo} ‚Äî ${ref}"
            DESC="**Akteur:** ${actor}\n**Branch:** ${ref}\n**SHA:** \`${short_sha}\`\n**Vergleich:** ${compare_url}"
            COLOR=5814783
            ICON="https://raw.githubusercontent.com/primer/octicons/main/icons/upload-24.svg"
            FIELDS=$(cat <<JSON
[
  { "name": "Commits", "value": "$COMMITS_ESC" },
  { "name": "Links", "value": "$(printf "‚Ä¢ Repo: %s\n‚Ä¢ Actions: %s" "$repo_url" "$run_url" | esc_json)" }
]
JSON
)
          elif [ "$event" = "pull_request" ]; then
            pr_title='${{ github.event.pull_request.title }}'
            pr_num='${{ github.event.pull_request.number }}'
            pr_state='${{ github.event.pull_request.state }}'
            pr_merged='${{ github.event.pull_request.merged }}'
            pr_url='${{ github.event.pull_request.html_url }}'
            base='${{ github.event.pull_request.base.ref }}'
            head='${{ github.event.pull_request.head.ref }}'
            draft='${{ github.event.pull_request.draft }}'

            TITLE="üîÄ PR #${pr_num}: ${pr_title}"
            status_emoji="üü¢"
            [ "$pr_state" != "open" ] && status_emoji="üü°"
            [ "${pr_merged}" = "true" ] && status_emoji="üü£"
            [ "${draft}" = "true" ] && status_emoji="‚ö™"
            DESC="${status_emoji} **Status:** ${pr_state}  |  **Merged:** ${pr_merged}\n**Akteur:** ${actor}\n${pr_url}"
            COLOR=9055202
            ICON="https://raw.githubusercontent.com/primer/octicons/main/icons/git-pull-request-24.svg"
            FIELDS=$(cat <<JSON
[
  { "name": "Basis ‚Üí Head", "value": "$(printf "\`%s\` ‚Üí \`%s\`" "$base" "$head" | esc_json)" },
  { "name": "Repository"
