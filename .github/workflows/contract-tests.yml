name: contract-tests (optional)

on:
  workflow_dispatch:

jobs:
  prism-mock:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Validate OpenAPI
        run: npx --yes swagger-cli@latest validate docs/openapi.yaml
      - name: Start Prism mock
        run: npx --yes @stoplight/prism-cli@latest mock docs/openapi.yaml &
      - name: Wait and probe mock
        run: |
          sleep 3
          curl -fsSL http://127.0.0.1:4010/ || true

  dredd-proxy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Start stack (db + api) via docker compose
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
        run: |
          set -euxo pipefail
          if docker compose version >/dev/null 2>&1; then
            DOCKER_COMPOSE="docker compose"
          else
            DOCKER_COMPOSE="docker-compose"
          fi
          $DOCKER_COMPOSE version
          $DOCKER_COMPOSE up -d --build db api
      - name: Wait for API health
        run: |
          set -e
          for i in $(seq 1 40); do
            if curl -fsS http://localhost:3001/api/health >/dev/null; then
              echo "API is healthy"; exit 0; fi
            sleep 3
          done
          echo "API did not become healthy in time" >&2
          curl -s http://localhost:3001/api/health || true
          exit 1
      - name: Run Dredd against API
        run: npx --yes dredd@latest docs/openapi.yaml http://localhost:3001/api/v1
      - name: Show compose status and full logs (always)
        if: ${{ always() }}
        run: |
          set +e
          if docker compose version >/dev/null 2>&1; then
            DOCKER_COMPOSE="docker compose"
          else
            DOCKER_COMPOSE="docker-compose"
          fi
          $DOCKER_COMPOSE ps
          $DOCKER_COMPOSE logs --no-color db api || true
      - name: Teardown stack (always)
        if: ${{ always() }}
        run: |
          if docker compose version >/dev/null 2>&1; then
            DOCKER_COMPOSE="docker compose"
          else
            DOCKER_COMPOSE="docker-compose"
          fi
          $DOCKER_COMPOSE down -v || true
