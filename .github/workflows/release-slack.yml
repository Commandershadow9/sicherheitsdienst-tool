name: release-slack

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to announce (e.g., v1.1.1)'
        required: false

jobs:
  slack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare message
        id: msg
        shell: bash
        env:
          GH_EVENT_JSON: ${{ toJson(github.event) }}
        run: |
          set -euo pipefail
          TAG_INPUT='${{ github.event.inputs.tag }}'
          TAG='${{ github.event.release.tag_name }}'
          [ -n "$TAG_INPUT" ] && TAG="$TAG_INPUT"
          [ -z "$TAG" ] && TAG="$(git describe --tags --abbrev=0 --match 'v*' || echo '')"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

          FILE="docs/releases/${TAG}.md"
          if [ -f "$FILE" ]; then
            BODY="$(cat "$FILE")"
          else
            BODY="$(awk -v ver="${TAG#v}" 'BEGIN{found=0} tolower($0) ~ "^##[[:space:]]*\\[?v?" tolower(ver) "\\]?" { if(!found){found=1; next} } found && /^##[[:space:]]*\[?v?[0-9]/ {exit} found {print}' CHANGELOG.md)"
          fi
          # Truncate to ~2500 chars for Slack and escape quotes
          BODY_TRUNC="${BODY:0:2500}"
          BODY_TRUNC="${BODY_TRUNC//"/\"}"
          echo "body=$BODY_TRUNC" >> $GITHUB_OUTPUT

      - name: Send to Slack Incoming Webhook
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          test -n "${SLACK_WEBHOOK:-}" || { echo '::error::Secret SLACK_WEBHOOK missing'; exit 1; }
          TAG='${{ steps.msg.outputs.tag }}'
          BODY='${{ steps.msg.outputs.body }}'
          REPO='${{ github.repository }}'
          URL="https://github.com/${REPO}/releases/tag/${TAG}"
          payload=$(cat <<JSON
          {
            "text": "Release ${TAG}",
            "blocks": [
              {"type":"header","text":{"type":"plain_text","text":"Release ${TAG}"}},
              {"type":"section","text":{"type":"mrkdwn","text":"<${URL}|Release ${TAG}>\n\n${BODY}"}}
            ]
          }
JSON
          )
          curl -sS -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK"

